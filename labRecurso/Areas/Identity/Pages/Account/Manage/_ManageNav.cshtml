@using Microsoft.AspNetCore.Identity;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Perfil</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (User.IsInRole("Admin"))
    {
    <li class="nav-item">
                    <a class="nav-link" asp-controller="Perfils" asp-action="Index">Editar Utilizadores</a>
       </li>
    }
    <li class="nav-item">
        <a class="nav-link" asp-controller="PerfilCategorias" asp-action="Index">Catergorias Favoritas</a>
    </li>


</ul>
